name: Docker Image CI/CD

on:
  workflow_dispatch:
    inputs:
      replicas:
        description: 'Number of replicas to run'
        required: false
        default: '5'

  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Build Docker image
      #   run: docker build -t deploymentimage .

      # - name: Tag Docker image
      #   run: docker tag deploymentimage manoj20002/deploymentimage:latest

      # - name: Push Docker image
      #   run: docker push manoj20002/deploymentimage:latest

      # - name: Pull latest Docker image
      #   run: docker pull manoj20002/deploymentimage:latest

      - name: Generate Nginx config and reload
        shell: bash
        run: |
          REPLICAS="${{ github.event.inputs.replicas }}"
          if [ -z "$REPLICAS" ]; then
            REPLICAS=5
          fi

          CONFIG_FILE="/etc/nginx/sites-available/api-skoegle-config"

          echo "upstream backend {" | sudo tee $CONFIG_FILE
          for i in $(seq 1 $REPLICAS); do
            PORT=$((13000 + i))
            echo "    server 127.0.0.1:$PORT;" | sudo tee -a $CONFIG_FILE
          done
          echo "}" | sudo tee -a $CONFIG_FILE

          sudo tee -a $CONFIG_FILE > /dev/null <<'EOF'

              server {
                   listen 80;
                listen [::]:80;

                 server_name test.skoegle.com;

                     location / {
                  proxy_pass http://backend;

                      proxy_http_version 1.1;
                   proxy_set_header Upgrade $http_upgrade;
                   proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                   proxy_cache_bypass $http_upgrade;

                   proxy_set_header X-Real-IP $remote_addr;
                   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
               }
          }
           

    
          
      - run : sudo systemctl reload nginx
      - name: Restart Docker containers
        shell: bash
        run: |
          REPLICAS="${{ github.event.inputs.replicas }}"
          if [ -z "$REPLICAS" ]; then
            REPLICAS=5
          fi

          echo "Stopping old containers..."
          docker ps -q --filter "ancestor=manoj20002/deploymentimage:latest" | xargs -r docker stop
          docker ps -aq --filter "ancestor=manoj20002/deploymentimage:latest" | xargs -r docker rm

          echo "Spinning up $REPLICAS new containers..."
          for i in $(seq 1 $REPLICAS); do
            PORT=$((13000 + i))
            docker run -d -p ${PORT}:13000 --name app_$i manoj20002/deploymentimage:latest
          done
