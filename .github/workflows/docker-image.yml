name: Docker Image CI/CD

on:
  workflow_dispatch:
    inputs:
      replicas:
        description: 'Number of replicas to run'
        required: false
        default: '5'

  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Build Docker image
      #   run: docker build -t deploymentimage .

      # - name: Tag Docker image
      #   run: docker tag deploymentimage manoj20002/deploymentimage:latest

      # - name: Push Docker image
      #   run: docker push manoj20002/deploymentimage:latest

      - name: Pull latest Docker image
        run: docker compose pull

      - name: Generate Nginx config and reload
        env:
          REPLICAS: ${{ github.event.inputs.replicas || '5' }}
        run: |
          echo "Updating Nginx for $REPLICAS replicas"

          CONFIG_FILE="/etc/nginx/sites-available/api-skoegle-config"

          echo "upstream backend {" > $CONFIG_FILE
          for i in $(seq 1 $REPLICAS); do
            PORT=$((13000 + i))
            echo "    server 127.0.0.1:$PORT;" >> $CONFIG_FILE
          done
          echo "}" >> $CONFIG_FILE

          cat <<EOF >> $CONFIG_FILE

server {
    listen 80;
    listen [::]:80;

    server_name _;

    location / {
        proxy_pass http://backend;

        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;

        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

          echo "Reloading Nginx..."
          sudo systemctl reload nginx

      - name: Restart Docker containers
        env:
          REPLICAS: ${{ github.event.inputs.replicas || '5' }}
        run: |
          echo "Stopping old containers..."
          docker ps -q --filter "ancestor=manoj20002/deploymentimage:latest" | xargs -r docker stop
          docker ps -aq --filter "ancestor=manoj20002/deploymentimage:latest" | xargs -r docker rm

          echo "Spinning up $REPLICAS new containers..."
          for i in $(seq 1 $REPLICAS); do
            PORT=$((13000 + i))
            docker run -d -p ${PORT}:3000 --name app_$i manoj20002/deploymentimage:latest
          done

          echo "Deployment complete."
